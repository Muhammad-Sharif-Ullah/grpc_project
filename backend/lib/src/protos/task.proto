syntax = "proto3";
package  task;



import "google/protobuf/timestamp.proto";


message Task {

  int32 id = 1;
  string title = 2;
  string description = 3;
  bool done = 4;
  Priority priority = 5;
  Status status = 6;
  google.protobuf.Timestamp create_at = 7;
  google.protobuf.Timestamp update_at = 8;
  google.protobuf.Timestamp last_update_at = 9;
  // The user who created the task.
  TaskUser creat_user = 10;
  /// list of assigned user to the task.
  repeated Task assigned_users = 11;
  /// last user who updated the task.
  User last_updated_user = 12;
  // list of comments on the task.
  repeated Comment comments = 13;
  Project project = 14;

}

/// The priority of the task.   
enum Priority {
  LOW = 0;
  MEDIUM = 1;
  HIGH = 2;
}

 /// The status of the task.   
 enum Status {
  IDLE = 0;
  DOING = 1;
  DONE = 2;
}


// The user who created the task.
message User {
  int32 id = 1;
  string name = 2;
  string email = 3;
  string avatar = 5;
}

/// Permissions for the task.
enum Permissions {
   can_edit = 0;
   can_delete = 1;
   can_assign = 2;
   can_change_status = 3;
   can_change_priority = 4;
}


///TaskUser is a user with permissions.
message TaskUser{
  User user = 1;
  repeated Permissions permissions = 2;
}


 /// Comments on the task.
 message Comment {
  int32 id = 1;
  string text = 2;
  google.protobuf.Timestamp create_at = 3;
  google.protobuf.Timestamp update_at = 4;
  User user = 5;
}


/// Project of the task.
message Project {
    int32 id = 1;
    string name = 2;
    string description = 3;
    google.protobuf.Timestamp create_at = 4;
    google.protobuf.Timestamp update_at = 5;
    TaskUser create_user = 6;
    repeated int32 tasks = 7;
    Status status = 8;
    Priority priority = 9;
    repeated TaskUser users = 10;
}


/// Pagination for the tasks.
message Pagination {
  int32 page = 1;
  int32 limit = 2;
  int32 total = 3;
  int32 pages = 4;
}

/// List of tasks.
message TaskListResponse {
  repeated Task tasks = 1;
  Pagination pagination = 2;
}

/// Get a task 
message GetTaskResponse {
  Task task = 1;
}

/// Filter for the tasks.
message TaskFilter {
  optional string title = 1;
  optional bool done = 3;
  optional Priority priority = 4;
  optional Status status = 5;
  optional int32 assigned_user_id = 8;
  optional int32 last_updated_user_id = 9;
  optional int32 comment_user_id = 10;
  optional string comment_text = 11;
  optional google.protobuf.Timestamp create_at = 12;
  optional google.protobuf.Timestamp update_at = 13;
  optional google.protobuf.Timestamp last_update_at = 14;
}


/// Request to create a task.
message CreateTaskRequest {
  string title = 1;
  optional string description = 2;
  int32 create_user_id = 3;
  Priority priority = 4;
  int32 project_id = 5;
  repeated int32 assigned_user_id = 6;
}

/// Request to update a task.
message UpdateTaskRequest {
  optional string title = 1;
  optional string description = 2;
  optional bool done = 3;
  optional Priority priority = 4;
  optional Status status = 5;
  repeated int32 updated_assigned_user_id = 6;
  int32 last_updated_user_id = 7;
  int32 id = 8;
  optional int32 project_id = 9;
}

// Add a comment to a task.
message AddOrUpdateCommentRequest {
  int32 task_id = 1;
  string text = 2;
  int32 user_id = 3;
  int32 project_id = 4;
  bool is_update = 5;
}

/// add a user to a task.
message AddOrRemoveUserToTaskRequest {
  int32 task_id = 1;
  int32 user_id = 2;
  int32 project_id = 3;
  bool is_remove = 4;
}


/// Request to delete a task.
message DeleteTaskRequest {
  int32 task_id = 1;
  int32 project_id = 2;
}

/// Request to get a task.
message GetTaskRequest {
  int32 id = 1;
}


message EmptyRequest {
}

message CreateProjectRequest{
  string name = 1;
  string description = 2;
  // optional Status status = 3;
  // optional Priority priority = 4;
  optional int32 create_user_id = 5;
}

message UpdateProjectRequest{
  int32 id = 1;
  optional string name = 2;
  optional string description = 3;
}

message DeleteProjectRequest{
  int32 id =1;
}
message GetProjectRequest{
  int32 id = 1;
}
message ProjectListResponse{
  Project projects = 1;
  Pagination pagination = 2;
}


/// ----- Project Service ------

service ProjectService {
  rpc CreateProject(CreateProjectRequest) returns (Project) {}
  rpc UpdateProject(UpdateProjectRequest) returns (Project) {}
  rpc DeleteProject(DeleteProjectRequest) returns (Project) {}
  rpc GetProject(GetProjectRequest) returns (Project) {}
  rpc GetProjects(EmptyRequest) returns (ProjectListResponse) {}
}



/// ----- Task Service ------

service TaskService {
  rpc CreateTask(CreateTaskRequest) returns (Task) {}
  rpc UpdateTask(UpdateTaskRequest) returns (Task) {}
  rpc DeleteTask(DeleteTaskRequest) returns (Task) {}
  rpc GetTask(GetTaskRequest) returns (GetTaskResponse) {}
  rpc GetTasks(EmptyRequest) returns (TaskListResponse) {}
  rpc AddOrUpdateComment(AddOrUpdateCommentRequest) returns (Comment) {}
  rpc AddOrRemoveUserToTask(AddOrRemoveUserToTaskRequest) returns (Task) {}
}


